using Euler.Helpers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Euler.Problems
{
    class Problem2 : BaseProblem
    {
        public override string ProblemDescription
        {
            get
            {
                return @"Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.";
            }
        }

        public override string ProblemName
        {
            get
            {
                return "Even Fibonacci numbers";
            }
        }

        public override int ProblemNumber
        {
            get
            {
                return 2;
            }
        }

        protected override string Solve()
        {
            long result = 0;

            IEnumerable<long> sequence = FibonacciHelper.GetSequenceFromMax(4000000);

            foreach (long number in sequence)
            {
                if (number % 2 == 0) result += number;
            }

            return result.ToString("0");
        }
    }
}
